name : Postman Collection Workflow

on:
  push:
    branches: [main]
  workflow_dispatch:
  schedule:
    - cron : 30 02 * * * # 8:00 AM daily
    - cron : 00 14 * * * # 7:30 PM daily
    - cron : 00 06 * * 1-5 # 11:30 am IST Monday to Friday

jobs:
  run-postman-tests:
    runs-on: ec2-github-runner

    steps:
      - name: Checkout the code
        uses: actions/checkout@v5.0.0 

      - name: Install Node.js and npm
        uses: actions/setup-node@v3.9.1
        with:
          node-version: 22
      - name: Install Newman and Html-extra globally
        run: | 
             npm install -g newman 
             npm install -g newman-reporter-htmlextra
      - name: Run the Postman collection with newman
        run: |
             newman run 'Inwarranty Flow Collection Copy 2.postman_collection.json' \
             -e QA.postman_environment.json \
             -d testDataCreateJob.csv \
             -r cli,htmlextra \
             --reporter-htmlextra-export ./newman/index.html
             
      - name: Newman Report
        if: always() # ensure that the archive executed irrespective whether the previous step has passed or not
        uses: actions/upload-artifact@v4.6.2
        with:
          name: Newman Report
          path: newman/*.html
      - name: Creating github page branch
        if: always()
        uses: peaceiris/actions-gh-pages@v4.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} # No need to create any token it is in build
          publish_dir: newman/
      - name: Send Email Notification
        if: always()
        uses: dawidd6/action-send-mail@v6
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }} # Not Gmail password, app password created
          subject: Phoenix Inwarranty Flow Test Execution Notification
          to: ksvishal1617@gmail.com
          from: ${{ secrets.EMAIL_USERNAME }}
          body: |
                Hi,
                Phoenix Inwarranty Flow tests has been executed. The report has been published and the URL
                is: https://vishalksv.github.io/Phoenix-Inwarranty-Flow/
          
          
          
          
             
